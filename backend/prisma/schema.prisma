// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {

id String @id @default(uuid())
name String
email String
password String
create_at DateTime? @default(now())
updated_at DateTime? @default(now())

@@map("users")

}

model Category {

id String @id @default(uuid())
name String
create_at DateTime? @default(now())
updated_at DateTime? @default(now())

@@map("Categorys")
products Product[]

}

model Product {

id String @id @default(uuid())
name String
price String
description String
banner String
create_at DateTime? @default(now())
updated_at DateTime? @default(now())

category Category @relation(fields: [category_id],references: [id])//referenciando categorias 

@@map("Products")
pedidositem PedidoItem[]
category_id String

}

model Pedido {

id String @id @default(uuid())
table Int
status Boolean @default(false)
draft Boolean @default(true)
name String?

create_at DateTime? @default(now())
updated_at DateTime? @default(now())

@@map("Pedidos")
pedidositem PedidoItem[]

}

model PedidoItem {

id String @id @default(uuid())
amount Int //quantidade de itens 

create_at DateTime? @default(now())
updated_at DateTime? @default(now())

pedido Pedido @relation(fields: [pedido_id],references: [id])//referenciando pedidos 
product Product @relation(fields: [product_id],references: [id])//referenciando categorias
@@map("PedidoItems")
pedido_id String
product_id String

}